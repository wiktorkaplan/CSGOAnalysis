[{"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\index.js":"1","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\store\\store.js":"2","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\app\\App.js":"3","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\reducers\\index.js":"4","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\privateroute\\PrivateRoute.js":"6","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\register\\RegisterView.js":"7","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\login\\LoginView.js":"8","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\profile\\ProfileView.js":"9","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\home\\HomeView.js":"10","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\upload\\UploadView.js":"11","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\results\\ResultsView.js":"12","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\reducers\\errorReducer.js":"13","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\reducers\\authReducer.js":"14","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\reducers\\uploadReducer.js":"15","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\logincomponent\\LoginComponent.js":"16","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\footer\\footer.js":"17","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\applicationbar\\ApplicationBar.js":"18","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\registercomponent\\RegisterComponent.js":"19","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\profilecomponent\\ProfileComponent.js":"20","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\fileuploader\\FileUploader.js":"21","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\results\\Results.js":"22","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\actions\\types.js":"23","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\accuracy\\Accuracy.js":"24","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\economy\\Economy.js":"25","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\rounds\\Rounds.js":"26","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\scoreboard\\Scoreboard.js":"27","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\replayCard\\ReplayCard.js":"28","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\roundtypechart\\RoundTypeChart.js":"29","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\accuracyCard\\accuracyCard.js":"30","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\moneychart\\MoneyChart.js":"31","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\overviewRoundPanel\\OverviewRoundPanel.js":"32","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\scoreboardTable\\Table.js":"33","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\economyPerformanceChart\\EconomyPerformanceChart.js":"34","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\roundPanel\\RoundPanel.js":"35","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\icons\\index.js":"36","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\performanceChart\\PerformanceChart.js":"37","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\roundResultChart\\RoundResultChart.js":"38","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\weaponChart\\WeaponChart.js":"39","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\weaponcard\\WeaponCard.js":"40","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\index.js":"41","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\app\\App.js":"42","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\privateroute\\PrivateRoute.js":"43","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\utils\\setAuthToken.js":"44","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\login\\LoginView.js":"45","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\profile\\ProfileView.js":"46","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\register\\RegisterView.js":"47","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\upload\\UploadView.js":"48","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\home\\HomeView.js":"49","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\results\\ResultsView.js":"50","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\logincomponent\\LoginComponent.js":"51","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\fileuploader\\FileUploader.js":"52","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\registercomponent\\RegisterComponent.js":"53","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\profilecomponent\\ProfileComponent.js":"54","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\results\\Results.js":"55","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\scoreboard\\Scoreboard.js":"56","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\roundtypechart\\RoundTypeChart.js":"57","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\applicationbar\\ApplicationBar.js":"58","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\weapons\\Weapons.js":"59","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\weapons\\WeaponsTable.js":"60","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\profilecomponent\\ReplayCard.js":"61","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\Rounds.js":"62","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\RoundPanel.js":"63","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\RoundResultChart.js":"64","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\scoreboard\\Table.js":"65","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\economy\\Economy.js":"66","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\economy\\EconomyPie.js":"67","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\economy\\EconomyResult.js":"68","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\economy\\EquipmentComp.js":"69","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\RoundRating.js":"70","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\RoundDamages.js":"71","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\store\\store.js":"72","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\reducers\\index.js":"73","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\reducers\\authReducer.js":"74","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\reducers\\uploadReducer.js":"75","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\reducers\\errorReducer.js":"76","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\actions\\types.js":"77"},{"size":317,"mtime":1606140062264,"results":"78","hashOfConfig":"79"},{"size":325,"mtime":1606140064206,"results":"80","hashOfConfig":"79"},{"size":1663,"mtime":1606140062388,"results":"81","hashOfConfig":"79"},{"size":277,"mtime":1606140064139,"results":"82","hashOfConfig":"79"},{"size":327,"mtime":1606140064235,"results":"83","hashOfConfig":"79"},{"size":589,"mtime":1606140062724,"results":"84","hashOfConfig":"79"},{"size":497,"mtime":1606140064343,"results":"85","hashOfConfig":"79"},{"size":476,"mtime":1606140064288,"results":"86","hashOfConfig":"79"},{"size":491,"mtime":1606140064315,"results":"87","hashOfConfig":"79"},{"size":4669,"mtime":1606140064263,"results":"88","hashOfConfig":"79"},{"size":468,"mtime":1606140064397,"results":"89","hashOfConfig":"79"},{"size":445,"mtime":1606140064365,"results":"90","hashOfConfig":"79"},{"size":242,"mtime":1606140064123,"results":"91","hashOfConfig":"79"},{"size":402,"mtime":1606140064108,"results":"92","hashOfConfig":"79"},{"size":347,"mtime":1606140064179,"results":"93","hashOfConfig":"79"},{"size":5857,"mtime":1607540452525,"results":"94","hashOfConfig":"79"},{"size":1179,"mtime":1606140062576,"results":"95","hashOfConfig":"79"},{"size":2488,"mtime":1606140062413,"results":"96","hashOfConfig":"79"},{"size":5686,"mtime":1607541252269,"results":"97","hashOfConfig":"79"},{"size":8926,"mtime":1606140062752,"results":"98","hashOfConfig":"79"},{"size":5020,"mtime":1606140062507,"results":"99","hashOfConfig":"79"},{"size":4042,"mtime":1606140062847,"results":"100","hashOfConfig":"79"},{"size":137,"mtime":1606140064088,"results":"101","hashOfConfig":"79"},{"size":2660,"mtime":1606140062334,"results":"102","hashOfConfig":"79"},{"size":3229,"mtime":1606140062438,"results":"103","hashOfConfig":"79"},{"size":2851,"mtime":1606140062930,"results":"104","hashOfConfig":"79"},{"size":771,"mtime":1606140062983,"results":"105","hashOfConfig":"79"},{"size":2597,"mtime":1606140062811,"results":"106","hashOfConfig":"79"},{"size":5408,"mtime":1606140062957,"results":"107","hashOfConfig":"79"},{"size":5038,"mtime":1606140062360,"results":"108","hashOfConfig":"79"},{"size":1582,"mtime":1606140062641,"results":"109","hashOfConfig":"79"},{"size":3119,"mtime":1606140062672,"results":"110","hashOfConfig":"79"},{"size":2081,"mtime":1606140063006,"results":"111","hashOfConfig":"79"},{"size":1805,"mtime":1606140062461,"results":"112","hashOfConfig":"79"},{"size":2986,"mtime":1606140062874,"results":"113","hashOfConfig":"79"},{"size":2023,"mtime":1606140063462,"results":"114","hashOfConfig":"79"},{"size":1732,"mtime":1606140062699,"results":"115","hashOfConfig":"79"},{"size":1753,"mtime":1606140062904,"results":"116","hashOfConfig":"79"},{"size":2086,"mtime":1606140063027,"results":"117","hashOfConfig":"79"},{"size":3303,"mtime":1606140063048,"results":"118","hashOfConfig":"79"},{"size":317,"mtime":1609873891042,"results":"119","hashOfConfig":"120"},{"size":1651,"mtime":1608042518545,"results":"121","hashOfConfig":"120"},{"size":589,"mtime":1606140062724,"results":"122","hashOfConfig":"120"},{"size":327,"mtime":1606140064235,"results":"123","hashOfConfig":"120"},{"size":398,"mtime":1607704357099,"results":"124","hashOfConfig":"120"},{"size":412,"mtime":1607814194375,"results":"125","hashOfConfig":"120"},{"size":418,"mtime":1607704351454,"results":"126","hashOfConfig":"120"},{"size":389,"mtime":1607785053398,"results":"127","hashOfConfig":"120"},{"size":8502,"mtime":1607794225203,"results":"128","hashOfConfig":"120"},{"size":366,"mtime":1607860449036,"results":"129","hashOfConfig":"120"},{"size":5712,"mtime":1607804946931,"results":"130","hashOfConfig":"120"},{"size":6580,"mtime":1609786392280,"results":"131","hashOfConfig":"120"},{"size":5982,"mtime":1607804489267,"results":"132","hashOfConfig":"120"},{"size":3758,"mtime":1608045369476,"results":"133","hashOfConfig":"120"},{"size":7439,"mtime":1608128787098,"results":"134","hashOfConfig":"120"},{"size":1154,"mtime":1608045881730,"results":"135","hashOfConfig":"120"},{"size":5408,"mtime":1606140062957,"results":"136","hashOfConfig":"120"},{"size":3010,"mtime":1608042538985,"results":"137","hashOfConfig":"120"},{"size":1400,"mtime":1607990539759,"results":"138","hashOfConfig":"120"},{"size":9235,"mtime":1609786505880,"results":"139","hashOfConfig":"120"},{"size":2848,"mtime":1608128032278,"results":"140","hashOfConfig":"120"},{"size":4620,"mtime":1608603777221,"results":"141","hashOfConfig":"120"},{"size":6523,"mtime":1608083975195,"results":"142","hashOfConfig":"120"},{"size":1688,"mtime":1608087206301,"results":"143","hashOfConfig":"120"},{"size":4686,"mtime":1608045891226,"results":"144","hashOfConfig":"120"},{"size":7928,"mtime":1608587947686,"results":"145","hashOfConfig":"120"},{"size":7323,"mtime":1608587870147,"results":"146","hashOfConfig":"120"},{"size":3792,"mtime":1609854191369,"results":"147","hashOfConfig":"120"},{"size":4093,"mtime":1609854078695,"results":"148","hashOfConfig":"120"},{"size":2198,"mtime":1608604216119,"results":"149","hashOfConfig":"120"},{"size":2204,"mtime":1608602719616,"results":"150","hashOfConfig":"120"},{"size":325,"mtime":1606140064206,"results":"151","hashOfConfig":"120"},{"size":277,"mtime":1606140064139,"results":"152","hashOfConfig":"120"},{"size":402,"mtime":1606140064108,"results":"153","hashOfConfig":"120"},{"size":347,"mtime":1606140064179,"results":"154","hashOfConfig":"120"},{"size":242,"mtime":1606140064123,"results":"155","hashOfConfig":"120"},{"size":137,"mtime":1606140064088,"results":"156","hashOfConfig":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"13xyhcj",{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"159"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"159"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"159"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"159"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"159"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"159"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"159"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"159"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"159"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"159"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"159"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"159"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"159"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"159"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"159"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"159"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ruafiq",{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"259"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"259"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"259"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"259"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"259"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"259"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\index.js",[],["339","340"],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\store\\store.js",["341","342","343","344"],"import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/index\";\nconst data = require('../reducers/test.json');\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n);\nexport default store;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\app\\App.js",["345"],"import React from 'react';\nimport { BrowserRouter, Redirect, Route } from 'react-router-dom';\nimport LoginView from '../../views/login/LoginView';\nimport RegisterView from '../../views/register/RegisterView';\nimport ProfileView from '../../views/profile/ProfileView';\nimport HomeView from '../../views/home/HomeView';\nimport UploadView from '../../views/upload/UploadView';\nimport ResultsView from '../../views/results/ResultsView';\nimport PrivateRoute from '../privateroute/PrivateRoute';\n\nimport setAuthToken from '../../utils/setAuthToken';\nimport jwt_decode from \"jwt-decode\";\nimport store from '../../redux/store/store';\n\n\nif (localStorage.jwtToken) {\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  const decoded = jwt_decode(token);\n  store.dispatch({\n    type: 'LOGIN',\n    payload: decoded\n  });\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    store.dispatch({\n      type: 'LOGIN',\n      payload: {}\n    });\n    window.location.href = \"./login\";\n  }\n}\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Route exact path='/' component={HomeView}></Route>\n        <Route path='/login' component={LoginView}></Route>\n        <Route path='/register' component={RegisterView}></Route>\n        <PrivateRoute path='/profile' component={ProfileView}></PrivateRoute>\n        <PrivateRoute path='/upload' component={UploadView}></PrivateRoute>\n        <PrivateRoute path='/results' component={ResultsView}></PrivateRoute>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n\n\n","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\privateroute\\PrivateRoute.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\register\\RegisterView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\login\\LoginView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\profile\\ProfileView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\home\\HomeView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\upload\\UploadView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\views\\results\\ResultsView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\reducers\\errorReducer.js",["346"],"import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\reducers\\authReducer.js",["347"],"import { LOGIN } from '../actions/types';\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\reducers\\uploadReducer.js",["348"],"import { UPLOAD } from '../actions/types';\nconst results = require('./test.json');\nconst initialState = results;\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case UPLOAD:\n      return {\n        ...state,\n        ...action.payload // game results from server\n      };\n    default:\n      return state;\n  }\n}","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\logincomponent\\LoginComponent.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\footer\\footer.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\applicationbar\\ApplicationBar.js",["349"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link, withRouter } from 'react-router-dom';\nimport Icon from '@material-ui/core/Icon';\nimport { connect } from \"react-redux\";\nimport setAuthToken from '../../utils/setAuthToken';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    flexGrow: 1,\n    textDecoration: 'none',\n  }\n});\n\nclass ButtonAppBar extends React.Component {\n  constructor() {\n    super();\n  }\n\n  logout = (e) => {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    this.props.dispatch({\n      type: 'LOGIN',\n      payload: {}\n    });\n    this.props.history.push('/login');\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"transparent\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title} color='inherit' component={Link} to='/'>CSGO Analyzer</Typography>\n\n            {this.props.auth.isAuthenticated\n              ? <Button color=\"inherit\" className={classes.menuButton} component={Link} to='/upload'>\n                <Icon className={classes.menuButton} color='inherit'>add_circle</Icon>\n                <span>Upload</span>\n              </Button>\n              : <div></div>\n            }\n\n            {this.props.auth.isAuthenticated\n              ? <Button color=\"inherit\" className={classes.menuButton} component={Link} to='/profile'>Profile</Button>\n              : <div></div>\n            }\n\n            {this.props.auth.isAuthenticated\n              ? <Button color=\"inherit\" className={classes.menuButton} onClick={this.logout}>Logout</Button>\n              : <Button color=\"inherit\" className={classes.menuButton} component={Link} to='/login'>Login</Button>\n            }\n\n            {!this.props.auth.isAuthenticated\n              ? <Button color=\"inherit\" className={classes.menuButton} component={Link} to='/register'>Register</Button>\n              : <div></div>\n            }\n\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(withRouter(withStyles(styles)(ButtonAppBar)));","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\registercomponent\\RegisterComponent.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\profilecomponent\\ProfileComponent.js",["350","351","352"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport ReplayCard from '../replayCard/ReplayCard';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = (theme) => ({\n  container: {\n    paddingTop: '64px'\n  },\n  card: {\n    minWidth: 500\n  },\n  content: {\n    display: 'flex',\n    height: 150\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  editform: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '20%'\n  },\n  buttons: {\n    paddingTop: '10px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n\n});\n\nclass ProfileComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      replays: [],\n      disabled: true,\n      editdisabled: false,\n      errors: {\n        firstname: {\n          error: false,\n          message: ''\n        },\n        lastname: {\n          error: false,\n          message: ''\n        },\n        email: {\n          error: false,\n          message: ''\n        },\n        ign: {\n          error: false,\n          message: ''\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/users/uploads\")\n      .then(result => {\n        const res = result.data.sort((a, b) => b.datetime - a.datetime);\n        this.setState({ replays: res, disabled: true });\n      })\n      .catch(e => console.log(e))\n  }\n\n  handleDelete(e) {\n    const replayid = e.currentTarget.getAttribute('replayid');\n    axios.delete('/api/users/replay', {\n      params: {\n        replayid: replayid\n      }\n    }).then(result => {\n      const res = result.data.sort((a, b) => b.datetime - a.datetime);\n      this.setState({ replays: res, disabled: true });\n      console.log('deleted');\n    }).catch(e => {\n      console.log(e);\n    })\n  }\n\n  handlesubmit = (e) => {\n    e.preventDefault();\n    const fd = new FormData(document.querySelector('#editform'));\n    axios.post('/api/users/edit', fd, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then((response) => {\n      document.querySelector('#relogmsg').style.display = 'inline';\n      this.setState({\n        disabled: true,\n        editdisabled: true,\n        errors: {\n          firstname: {\n            error: false,\n            message: ''\n          },\n          lastname: {\n            error: false,\n            message: ''\n          },\n          email: {\n            error: false,\n            message: ''\n          },\n          ign: {\n            error: false,\n            message: ''\n          }\n        }\n      });\n\n    }).catch((error) => {\n      if (error.response.status === 400) {\n        this.setState({\n          errors: {\n            firstname: {\n              error: error.response.data.firstname ? true : false,\n              message: error.response.data.firstname ? error.response.data.firstname : '',\n            },\n            lastname: {\n              error: error.response.data.lastname ? true : false,\n              message: error.response.data.lastname ? error.response.data.lastname : '',\n            },\n            email: {\n              error: error.response.data.email ? true : false,\n              message: error.response.data.email ? error.response.data.email : '',\n            },\n            ign: {\n              error: error.response.data.ign ? true : false,\n              message: error.response.data.ign ? error.response.data.ign : '',\n            },\n          }\n        })\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const user = this.props.auth.user;\n    return (\n      <Container className={classes.container}>\n        <Card className={classes.card} raised>\n          <Typography align=\"center\" variant=\"h2\">Your Profile</Typography>\n          <CardContent>\n            <ExpansionPanel square>\n              <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\" expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.heading}>Personal Information</Typography>\n                <Typography className={classes.secondaryHeading}>See and edit your personal information</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Container>\n                  <form id=\"editform\" className={classes.editform} onSubmit={this.handlesubmit}>\n                    <TextField\n                      label=\"First Name\"\n                      defaultValue={user.firstname}\n                      disabled={this.state.disabled}\n                      size=\"medium\"\n                      name=\"firstname\"\n                      error={this.state.errors.firstname.error}\n                      helperText={this.state.errors.firstname.message}\n                      required\n                    />\n                    <TextField\n                      label=\"Last Name\"\n                      defaultValue={user.lastname}\n                      disabled={this.state.disabled}\n                      size=\"medium\"\n                      name=\"lastname\"\n                      error={this.state.errors.lastname.error}\n                      helperText={this.state.errors.lastname.message}\n                      required\n                    />\n                    <TextField\n                      label=\"Email\"\n                      defaultValue={user.email}\n                      disabled={this.state.disabled}\n                      size=\"medium\"\n                      name=\"email\"\n                      error={this.state.errors.email.error}\n                      helperText={this.state.errors.email.message}\n                      required\n                    />\n                    <TextField\n                      label=\"In Game Name\"\n                      defaultValue={user.ign}\n                      helperText={this.state.errors.ign.message}\n                      disabled={this.state.disabled}\n                      size=\"medium\"\n                      name=\"ign\"\n                      error={this.state.errors.ign.error}\n                      required\n                    />\n                    <Typography id=\"relogmsg\" style={{ display: 'none' }} color=\"primary\">Please logout for changes to take effect</Typography>\n                    <div className={classes.buttons}>\n                      <Button align=\"left\" variant=\"outlined\" disabled={this.state.editdisabled} onClick={(e) => {\n                        this.setState({ disabled: !this.state.disabled })\n                      }}>Edit</Button>\n                      <Button type=\"submit\" variant=\"outlined\" disabled={this.state.disabled}>Save</Button>\n                    </div>\n                  </form>\n\n                </Container>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n\n            <ExpansionPanel square>\n              <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\" expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.heading}>Replay History</Typography>\n                <Typography className={classes.secondaryHeading}>See your replay history</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Container>\n                  {this.state.replays.length > 0 ? (this.state.replays.map(replay => (\n                    <ReplayCard data={replay} handleDelete={this.handleDelete.bind(this)}></ReplayCard>\n                  ))) : (\n                      <Typography variant=\"h5\" align=\"left\" color=\"textSecondary\" component=\"p\">\n                        No replays found,\n                    upload a replay <a href=\"/upload\">here</a>\n                      </Typography>)}\n                </Container>\n\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(withRouter(withStyles(styles)(ProfileComponent)));\n","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\fileuploader\\FileUploader.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\results\\Results.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\redux\\actions\\types.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\accuracy\\Accuracy.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\economy\\Economy.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\rounds\\Rounds.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\scoreboard\\Scoreboard.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\replayCard\\ReplayCard.js",["353"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles({\n  content: {\n    display: 'flex',\n    height: 150\n  }\n});\n\nconst ReplayCard = (props) => {\n  const handleDelete = props.handleDelete;\n  const classes = useStyles();\n  const data = props.data;\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let result = props.data.winner ? 'Victory' : 'Defeat';\n  if (data.tScore == data.ctScore) {\n    result = 'Draw';\n  }\n\n  const handleClick = (e) => {\n    const replayid = e.currentTarget.getAttribute('replayid');\n    axios.get(\"/api/users/replay\", {\n      params: {\n        replayid: replayid\n      }\n    })\n      .then(result => {\n        dispatch({\n          type: 'UPLOAD',\n          payload: result.data,\n        });\n        history.push('/results');\n      })\n      .catch(e => console.log(e))\n  }\n\n  const getTime = (unix_timestamp) => {\n    var date = new Date(unix_timestamp);\n    return `${date.toDateString()} ${date.toLocaleTimeString()}`;\n  }\n\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.content}>\n        <Container align=\"center\">\n          <Typography>Counter Terrorist</Typography>\n          <Typography>{data.ctScore}</Typography>\n        </Container>\n        <Container align=\"center\">\n          <Typography variant=\"h5\">{result}</Typography>\n          <Typography>{getTime(data.datetime)}</Typography>\n          <Typography>{data.ctScore}:{data.tScore}</Typography>\n          <Typography>{data.map}</Typography>\n          <Typography>{data.gameLength}</Typography>\n          <Button variant=\"outlined\" replayid={data.id} color=\"primary\" onClick={handleClick}>View Analysis</Button>\n        </Container>\n        <Container align=\"center\">\n          <Typography>Terrorist</Typography>\n          <Typography>{data.tScore}</Typography>\n        </Container>\n        <IconButton aria-label=\"settings\" style={{ padding: 0, height: '30px' }}>\n          <DeleteIcon replayid={data.id} onClick={handleDelete} />\n        </IconButton>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ReplayCard;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\roundtypechart\\RoundTypeChart.js",["354","355","356","357","358"],"import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector } from 'recharts';\nimport Container from '@material-ui/core/Container';\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, percent, value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{value}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`${(percent * 100).toFixed(2)}%`}\n      </text>\n    </g>\n  );\n};\n\n\nexport default class RoundTypeChart extends React.Component {\n\n  constructor(props) {\n    super(props);\n    let fullbuyrounds = [];\n    let ecorounds = [];\n    let forcebuyrounds = [];\n    for (const round of props.data) {\n      if (round.amountSpent == 0) {\n        ecorounds.push(round.roundNumber);\n      } else if (round.amountSpent < 3000) {\n        forcebuyrounds.push(round.roundNumber);\n      } else {\n        fullbuyrounds.push(round.roundNumber);\n      }\n    }\n    const data = [\n      { name: 'Full Buy', value: fullbuyrounds.length },\n      { name: 'Force Buy', value: forcebuyrounds.length },\n      { name: 'Eco', value: ecorounds.length },\n    ];\n    this.state = {\n      data: {\n        rounds: [{\n          type: 'Force Buy',\n          rounds: forcebuyrounds\n        }, {\n          type: 'Full Buy',\n          rounds: fullbuyrounds\n        }, {\n          type: 'Eco',\n          rounds: ecorounds\n        }],\n        piechartdata: data\n      },\n      activeIndex: 0,\n    }\n  }\n\n  componentDidMount() {\n    let piechart = [...document.querySelectorAll('.recharts-surface')].find((e) => e.viewBox.baseVal.height == 230 && e.viewBox.baseVal.width == 500);\n    piechart.viewBox.baseVal.x = -40;\n    piechart.viewBox.baseVal.y = 90;\n  }\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Container>\n          <Typography align=\"center\" variant=\"subtitle2\">Round Type Table</Typography>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">Round Type</TableCell>\n                  <TableCell align=\"center\">Rounds</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.data.rounds ? (this.state.data.rounds.map(round => (\n                  <TableRow key={round.type}>\n                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                      {round.type}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Typography variant=\"body1\">{round.rounds.toString()}</Typography>\n                    </TableCell>\n                  </TableRow>\n                ))) : (<TableRow></TableRow>)}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n        </Container>\n        <Container style={{ display: 'flex', justifyContent: 'center', flexDirection: 'column', paddingTop: \"40px\" }}>\n          <Typography align=\"center\" variant=\"subtitle2\">Round Type Distribution Pie Chart</Typography>\n          <Container style={{ display: 'flex', justifyContent: 'center' }}>\n            <PieChart width={500} height={230}>\n              <Pie\n                activeIndex={this.state.activeIndex}\n                activeShape={renderActiveShape}\n                data={this.state.data.piechartdata}\n                cx={200}\n                cy={200}\n                innerRadius={60}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                onMouseEnter={this.onPieEnter}\n              />\n            </PieChart>\n          </Container>\n\n        </Container>\n\n\n      </Container>\n    );\n  }\n}\n","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\accuracyCard\\accuracyCard.js",["359"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport * as name from '../../icons/index.js';\n\nconst useStyles = makeStyles({\n  content: {\n    display: 'flex',\n    height: 150\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '1000px'\n  },\n  th: {\n    padding: '40px',\n    paddingBottom: '2px',\n    paddingTop: '0px'\n  }\n});\n\n\nconst getImageIcon = (weapon) => {\n  for (const icon of Object.keys(name)) {\n    if (icon.includes(weapon)) {\n      return name[icon];\n    }\n  }\n}\n\nconst AccuracyCard = (props) => {\n  const classes = useStyles();\n  const data = props.data;\n  const imageIcon = getImageIcon(data.weapon);\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.card}>\n        <Container>\n          <Typography variant=\"h5\" component=\"h3\">\n            {data.weapon}\n          </Typography>\n          <img src={imageIcon}></img>\n        </Container>\n        <Container>\n          <table>\n            <th className={classes.th}>Body Part</th>\n            <th className={classes.th}>Hits</th>\n            <th className={classes.th}>Percentage</th>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Head</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{data.head}</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{((data.head / data.totalHits) * 100).toFixed(2)}%</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Chest</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{data.chest}</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{((data.chest / data.totalHits) * 100).toFixed(2)}%</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Stomach</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{data.stomach}</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{((data.stomach / data.totalHits) * 100).toFixed(2)}%</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Left Arm</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{data.leftarm}</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{((data.leftarm / data.totalHits) * 100).toFixed(2)}%</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Right Arm</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{data.rightarm}</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{((data.rightarm / data.totalHits) * 100).toFixed(2)}%</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Left Leg</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{data.leftleg}</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{((data.leftleg / data.totalHits) * 100).toFixed(2)}%</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Right Leg</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{data.rightleg}</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{((data.rightleg / data.totalHits) * 100).toFixed(2)}%</Typography>\n              </td>\n            </tr>\n          </table>\n        </Container>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default AccuracyCard;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\moneychart\\MoneyChart.js",["360","361"],"import React from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label, ReferenceLine\n} from 'recharts';\nimport Container from '@material-ui/core/Container';\n\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n}));\n\nconst MoneyChart = (props) => {\n  const classes = useStyles();\n  const data = [];\n  for (const round of props.data) {\n    data.push({\n      name: round.roundNumber.toString(),\n      'Money Saved': round.moneySaved,\n      'Money Spent': round.amountSpent,\n      'Kill Reward': round.killReward\n    });\n  }\n\n  return (\n    <Container>\n      <Container className={classes.container}>\n        <LineChart\n          width={1000}\n          height={400}\n          data={data}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 30,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" label={{ value: 'Round Number', angle: 0, position: 'bottom' }}></XAxis>\n          <YAxis label={{ value: 'Dollars', angle: -90, position: 'insideLeft' }}></YAxis>\n          <Tooltip />\n          <Line type=\"monotone\" dataKey=\"Money Spent\" stroke=\"red\" activeDot={{ r: 8 }} />\n          <Legend verticalAlign=\"top\" height={36} />\n          <Line type=\"monotone\" dataKey=\"Money Saved\" stroke=\"blue\" />\n          <Line type=\"monotone\" dataKey=\"Kill Reward\" stroke=\"green\" />\n        </LineChart>\n      </Container>\n    </Container>\n\n\n  );\n}\n\nexport default MoneyChart;\n\n\n","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\overviewRoundPanel\\OverviewRoundPanel.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\scoreboardTable\\Table.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\economyPerformanceChart\\EconomyPerformanceChart.js",["362"],"import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport {\n  Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis,\n} from 'recharts';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n  }\n}));\n\nconst EconomyPerformanceChart = (props) => {\n  const averageSpend = props.data.map(r => r.amountSpent).reduce((acc, curr) => acc + curr) / props.data.length;\n  const averageSaved = props.data.map(r => r.moneySaved).reduce((acc, curr) => acc + curr) / props.data.length;\n  const averageEarned = props.data.map(r => r.killReward).reduce((acc, curr) => acc + curr) / props.data.length;\n  const data = [\n    {\n      stat: 'Average Spend',\n      A: averageSpend,\n    },\n    {\n      stat: 'Average Save',\n      A: averageSaved,\n    },\n    {\n      stat: 'Average Earned',\n      A: averageEarned,\n    },\n  ];\n  const classes = useStyles();\n  return (\n    <Container>\n      <Container className={classes.container}>\n        <RadarChart cx={300} cy={250} outerRadius={150} width={600} height={400} data={data}>\n          <PolarGrid />\n          <PolarAngleAxis dataKey=\"stat\" />\n          <PolarRadiusAxis />\n          <Radar name=\"\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n        </RadarChart>\n\n      </Container>\n      <Container>\n        <Typography>Average Spend: ${averageSpend.toFixed(2)}</Typography>\n        <Typography>Average Saved: ${averageSaved.toFixed(2)}</Typography>\n        <Typography>Average Earned: ${averageEarned.toFixed(2)}</Typography>\n      </Container>\n    </Container>\n  );\n}\n\nexport default EconomyPerformanceChart;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\roundPanel\\RoundPanel.js",["363"],"import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    textAlign: 'center',\n    '& > *': {\n      margin: theme.spacing(2),\n      width: theme.spacing(24),\n      height: theme.spacing(10),\n    },\n  },\n}));\n\nconst RoundPanel = (props) => {\n  const classes = useStyles();\n  let result = props.data.winner ? 'Victory' : 'Defeat';\n  let timeAlive = props.data.timeAlive == 0 ? 'Entire Round' : `${props.data.timeAlive}s`;\n  return (\n    <Container>\n      <Container className={classes.topContainer}>\n        <Paper elevation={3} >\n          <Typography>{result}</Typography>\n          <Typography>Reason: {props.data.reason}</Typography>\n          <Typography>Time Alive: {timeAlive}</Typography>\n        </Paper>\n      </Container >\n      <TableContainer >\n        <Table aria-label=\"simple table\">\n          <TableBody>\n            <TableRow>\n              <TableCell align=\"center\">Impact</TableCell>\n              <TableCell align=\"center\">{(props.data.damage / props.data.equipmentValue).toFixed(4)}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell align=\"center\">Kills</TableCell>\n              <TableCell align=\"center\">{props.data.kills}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell align=\"center\">Assists</TableCell>\n              <TableCell align=\"center\">{props.data.assists}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell align=\"center\">Headshot Kills</TableCell>\n              <TableCell align=\"center\">{props.data.headshotKills}</TableCell></TableRow>\n            <TableRow>\n              <TableCell align=\"center\">Damage Inflicted</TableCell>\n              <TableCell align=\"center\">{props.data.damage}</TableCell></TableRow>\n            <TableRow>\n              <TableCell align=\"center\">Amount Spent</TableCell>\n              <TableCell align=\"center\">${props.data.amountSpent}</TableCell></TableRow>\n            <TableRow>\n              <TableCell align=\"center\">Equipment Value</TableCell>\n              <TableCell align=\"center\">${props.data.equipmentValue}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell align=\"center\">Money Saved</TableCell>\n              <TableCell align=\"center\">${props.data.moneySaved}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n\n  )\n}\n\n\nexport default RoundPanel;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\icons\\index.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\performanceChart\\PerformanceChart.js",["364"],"import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport {\n  Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis,\n} from 'recharts';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n  }\n}));\n\nconst PerformanceChart = (props) => {\n  const data = [\n    {\n      stat: 'Average Kills',\n      A: Number(props.data.averageKills),\n    },\n    {\n      stat: 'Average Assists',\n      A: Number(props.data.averageAssists),\n    },\n    {\n      stat: 'Average Deaths',\n      A: Number(props.data.averageDeaths),\n    },\n    {\n      stat: 'Average Headshots',\n      A: Number(props.data.averageHeadshot),\n    },\n  ];\n  const classes = useStyles();\n  return (\n    <Container>\n      <Container className={classes.container}>\n        <RadarChart cx={300} cy={250} outerRadius={150} width={600} height={500} data={data}>\n          <PolarGrid />\n          <PolarAngleAxis dataKey=\"stat\" />\n          <PolarRadiusAxis />\n          <Radar name=\"\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n        </RadarChart>\n\n      </Container>\n      <Container>\n        <Typography>Average Kills: {props.data.averageKills.toFixed(2)}</Typography>\n        <Typography>Average Assists: {props.data.averageAssists.toFixed(2)}</Typography>\n        <Typography>Average Deaths: {props.data.averageDeaths.toFixed(2)}</Typography>\n        <Typography>Average Headshots: {props.data.averageHeadshot.toFixed(2)}</Typography>\n      </Container>\n    </Container>\n  );\n}\n\nexport default PerformanceChart;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\roundResultChart\\RoundResultChart.js",["365","366","367","368"],"import React from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label, ReferenceLine\n} from 'recharts';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst RoundResultChart = (props) => {\n  const classes = useStyles();\n  const data = [];\n  let teamScore = 0;\n  let opponentScore = 0;\n  props.data.forEach(round => {\n    if (round.winner) {\n      teamScore++;\n    } else {\n      opponentScore++;\n    }\n    data.push({\n      name: round.roundNumber.toString(),\n      teamScore: teamScore,\n      opponentScore: opponentScore\n    })\n  });\n\n  return (\n    <Container className={classes.container}>\n      <LineChart\n        width={800}\n        height={400}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 20,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" label={{ value: 'Round Number', angle: 0, position: 'bottom' }}></XAxis>\n        <YAxis label={{ value: 'Score', angle: -90, position: 'insideLeft' }}></YAxis>\n        <Tooltip />\n        <ReferenceLine y={16} label=\"Victory\" stroke=\"green\" strokeDasharray=\"3 3\" isFront />\n        <ReferenceLine y={15} label=\"Draw\" stroke=\"black\" strokeDasharray=\"3 3\" isFront />\n        <Line type=\"monotone\" dataKey=\"teamScore\" stroke=\"blue\" activeDot={{ r: 8 }} />\n        <Line type=\"monotone\" dataKey=\"opponentScore\" stroke=\"red\" />\n      </LineChart>\n    </Container>\n\n  );\n}\n\nexport default RoundResultChart;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\weaponChart\\WeaponChart.js",["369"],"import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from '@material-ui/core/Box';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport WeaponCard from '../weaponcard/WeaponCard';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nconst WeaponChart = (props) => {\n  let weapons = [];\n  let i = 0;\n  Object.entries(props.data).forEach(weaponData => {\n    let weaponStats = weaponData[1];\n    weaponStats.weapon = weaponData[0];\n    weaponStats.index = i;\n    weapons.push(weaponStats);\n    i++;\n  });\n  weapons.sort((a, b) => b.kills - a.kills);\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n  return (\n    <Container className={classes.root}>\n      {/* <Typography>Weapon Overview - accordion for rifles, pistols, grenades - sliding view like tabs</Typography> */}\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        aria-label=\"scrollable auto tabs example\"\n        cenetered>\n        {weapons ? (weapons.map(weapon => (\n          <Tab label={<WeaponCard data={weapon}></WeaponCard>}></Tab>\n        ))) : (<div></div>)}\n      </Tabs>\n      {/* {weapons ? (weapons.map(weapon => (\n        <TabPanel value={value} index={weapon.index}>\n          {JSON.stringify(weapon)}\n        </TabPanel>\n      ))) : (<div></div>)} */}\n    </Container>)\n}\n\n\nexport default WeaponChart;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis222222222\\client\\src\\components\\weaponcard\\WeaponCard.js",["370"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport * as name from '../../icons/index.js';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 1000,\n    maxHeight: 1000,\n  },\n  columns: {\n    columnCount: 2,\n    columnGap: 40\n  }\n});\n\nconst getImageIcon = (weapon) => {\n  for (const icon of Object.keys(name)) {\n    if (icon.includes(weapon)) {\n      return name[icon];\n    }\n  }\n}\n\nconst WeaponChart = (props) => {\n  const classes = useStyles();\n  const imageIcon = getImageIcon(props.data.weapon);\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <Container className={classes.mediaContainer}>\n          <img src={imageIcon}></img>\n        </Container>\n        <Typography variant=\"h5\" component=\"h3\">\n          {props.data.weapon.toUpperCase()}\n        </Typography>\n        <CardContent>\n          <table>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Kills</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{props.data.kills}</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Headshots</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{props.data.headshots}</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Damage Inflicted</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{props.data.damage}</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Shots Fired</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{props.data.numberFired}</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Shots Hit</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{props.data.numberHit}</Typography>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Accuracy</Typography>\n              </td>\n              <td>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">{props.data.accuracy ? `${props.data.accuracy.toFixed(2)}%` : '0.00%'}</Typography>\n              </td>\n            </tr>\n          </table>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nexport default WeaponChart;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\index.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\app\\App.js",[],["371","372"],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\privateroute\\PrivateRoute.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\login\\LoginView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\profile\\ProfileView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\register\\RegisterView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\upload\\UploadView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\home\\HomeView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\views\\results\\ResultsView.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\logincomponent\\LoginComponent.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\fileuploader\\FileUploader.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\registercomponent\\RegisterComponent.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\profilecomponent\\ProfileComponent.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\results\\Results.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\scoreboard\\Scoreboard.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\roundtypechart\\RoundTypeChart.js",["373","374","375","376","377"],["378","379"],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\applicationbar\\ApplicationBar.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\weapons\\Weapons.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\weapons\\WeaponsTable.js",["380","381","382"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { connect } from 'react-redux';\r\n\r\nObject.filter = (obj, predicate) =>\r\n    Object.keys(obj)\r\n        .filter(key => predicate(obj[key]))\r\n        .reduce((res, key) => (res[key] = obj[key], res), {});\r\n\r\n//funkcja sortująca dla obiektow\r\nfunction sortProperties2(obj, sortedBy, isNumericSort, reverse) {\r\n    sortedBy = sortedBy || 1; // by default first key\r\n    isNumericSort = isNumericSort || false; // by default text sort\r\n    reverse = reverse || false; // by default no reverse\r\n\r\n    var reversed = (reverse) ? -1 : 1;\r\n\r\n    var sortable2 = [];\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            sortable2.push([key, obj[key]]);\r\n        }\r\n    }\r\n    var sortable = [];\r\n    for (var key2 in sortable2) {\r\n        if (sortable2[key2][1].kills > 0) sortable.push(sortable2[key2]);\r\n    }\r\n    if (isNumericSort)\r\n        sortable.sort(function (a, b) {\r\n            return reversed * (a[1][sortedBy] - b[1][sortedBy]);\r\n        });\r\n    else\r\n        sortable.sort(function (a, b) {\r\n            var x = a[1][sortedBy].toLowerCase(),\r\n                y = b[1][sortedBy].toLowerCase();\r\n            return x < y ? reversed * -1 : x > y ? reversed : 0;\r\n        });\r\n\r\n    return sortable;\r\n}\r\n//funkcja sortująca dla obiektow\r\nfunction sortProperties(obj, sortedBy, isNumericSort, reverse) {\r\n    sortedBy = sortedBy || 1; // by default first key\r\n    isNumericSort = isNumericSort || false; // by default text sort\r\n    reverse = reverse || false; // by default no reverse\r\n\r\n    var reversed = (reverse) ? -1 : 1;\r\n\r\n    var sortable = [];\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            sortable.push([key, obj[key]]);\r\n        }\r\n    }\r\n    if (isNumericSort)\r\n        sortable.sort(function (a, b) {\r\n            return reversed * (a[1][sortedBy] - b[1][sortedBy]);\r\n        });\r\n    else\r\n        sortable.sort(function (a, b) {\r\n            var x = a[1][sortedBy].toLowerCase(),\r\n                y = b[1][sortedBy].toLowerCase();\r\n            return x < y ? reversed * -1 : x > y ? reversed : 0;\r\n        });\r\n    return sortable;\r\n}\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n    table: {\r\n        minWidth: 350,\r\n    },\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.info.dark,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\nconst Row = (props) => {\r\n    let { row, guns } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    if (guns) {\r\n        guns = sortProperties2(guns, 'kills', true, true);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <StyledTableRow className={classes.root}>\r\n                <StyledTableCell>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </StyledTableCell>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.name}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">{row.clanName}</StyledTableCell>\r\n                <StyledTableCell align=\"center\" >{guns[0][0].toString()}</StyledTableCell>\r\n            </StyledTableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            {/* <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                \r\n              </Typography> */}\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">Weapon name</TableCell>\r\n                                        <TableCell align=\"center\">Kills</TableCell>\r\n                                        <TableCell align=\"center\">Headshots</TableCell>\r\n                                        <TableCell align=\"center\">Headshots %</TableCell>\r\n                                        <TableCell align=\"center\">Shots</TableCell>\r\n                                        <TableCell align=\"center\">Damage</TableCell>\r\n                                        <TableCell align=\"center\">Accuracy</TableCell>\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {guns ? (guns.map(gun => (\r\n\r\n                                        <StyledTableRow key={gun[0].toString()}>\r\n                                            <StyledTableCell align=\"left\" component=\"th\" scope=\"row\">{gun[0].toString()}</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">{gun[1].kills}</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">{gun[1].headshots}</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">{Math.round((gun[1].headshots / gun[1].kills) * 100) / 1}%</StyledTableCell>\r\n                                            <StyledTableCell align=\"right\">{gun[1].numberFired}</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">{gun[1].damage}</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">{Math.round((gun[1].accuracy) * 1) / 1}%</StyledTableCell>\r\n                                        </StyledTableRow>\r\n                                    ))) : <StyledTableCell></StyledTableCell>}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\n// Row.propTypes = {\r\n//     row: PropTypes.shape({\r\n//         calories: PropTypes.number.isRequired,\r\n//         carbs: PropTypes.number.isRequired,\r\n//         fat: PropTypes.number.isRequired,\r\n//         history: PropTypes.arrayOf(\r\n//             PropTypes.shape({\r\n//                 amount: PropTypes.number.isRequired,\r\n//                 customerId: PropTypes.string.isRequired,\r\n//                 date: PropTypes.string.isRequired,\r\n//             }),\r\n//         ).isRequired,\r\n//         name: PropTypes.string.isRequired,\r\n//         price: PropTypes.number.isRequired,\r\n//         protein: PropTypes.number.isRequired,\r\n//     }).isRequired,\r\n// };\r\n\r\nconst ResultsTable = (props) => {\r\n    let rows;\r\n    if (props.data) {\r\n        rows = Object.filter(props.data, row => row.teamGame === props.team);\r\n        rows = sortProperties(rows, 'kills', true, true);\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <StyledTableRow>\r\n                        <StyledTableCell />\r\n                        <StyledTableCell align=\"center\">Player name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Team name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">The weapon with the most kills</StyledTableCell>\r\n                    </StyledTableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows ? (rows.map(row => (\r\n                        <Row key={row[1].name} row={row[1]} guns={row[1]} />\r\n                    ))) : <StyledTableCell></StyledTableCell>}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    if (state) {\r\n        return {\r\n            data: state.results.weapons\r\n        }\r\n    }\r\n    return {};\r\n}\r\n\r\nexport default connect(mapStateToProps)(ResultsTable);",["383","384"],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\profilecomponent\\ReplayCard.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\Rounds.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\RoundPanel.js",["385"],"import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { connect } from 'react-redux';\n\nObject.filter = (obj, predicate) =>\n  Object.keys(obj)\n    .filter(key => predicate(obj[key]))\n    .reduce((res, key) => (res[key] = obj[key], res), {});\n\n//funkcja sortująca dla obiektow\nfunction sortProperties(obj, sortedBy, isNumericSort, reverse) {\n  sortedBy = sortedBy || 1; // by default first key\n  isNumericSort = isNumericSort || false; // by default text sort\n  reverse = reverse || false; // by default no reverse\n\n  var reversed = (reverse) ? -1 : 1;\n\n  var sortable = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      sortable.push([key, obj[key]]);\n    }\n  }\n  if (isNumericSort)\n    sortable.sort(function (a, b) {\n      return reversed * (a[1][sortedBy] - b[1][sortedBy]);\n    });\n  else\n    sortable.sort(function (a, b) {\n      var x = a[1][sortedBy].toLowerCase(),\n        y = b[1][sortedBy].toLowerCase();\n      return x < y ? reversed * -1 : x > y ? reversed : 0;\n    });\n  return sortable;\n}\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  table: {\n    minWidth: 350,\n  },\n});\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.info.dark,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\n\nconst Row = (props) => {\n  let { row, rou, roundNumber } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  let rounds2;\n  let rounds = [];\n  if (rou) {\n    rounds2 = sortProperties(rou, 'kills', true, true);\n    for (var key2 in rounds2) {\n      if (rounds2[key2][1].kills > -1) rounds.push(rounds2[key2]);\n    }\n  }\n  return (\n    <React.Fragment>\n      <StyledTableRow className={classes.root}>\n        <StyledTableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n        <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n          {roundNumber}\n        </StyledTableCell>\n        <StyledTableCell align=\"center\">{row.ctScore} : {row.ttScore}</StyledTableCell>\n        <StyledTableCell align=\"center\" >{row.reason}</StyledTableCell>\n      </StyledTableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              {/* <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                \n              </Typography> */}\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">Player name</TableCell>\n                    <TableCell align=\"center\">Kills</TableCell>\n                    <TableCell align=\"center\">Assists</TableCell>\n                    <TableCell align=\"center\">Headshot kills</TableCell>\n                    <TableCell align=\"center\">Amount spent</TableCell>\n                    <TableCell align=\"center\">Equipment value</TableCell>\n                    <TableCell align=\"center\">Money saved</TableCell>\n                    <TableCell align=\"right\">Clan name</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rounds ? (rounds.map(gun => (\n                    <StyledTableRow key={gun[0].toString()}>\n                      <StyledTableCell align=\"left\" component=\"th\" scope=\"row\">{gun[0].toString()}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{gun[1].kills}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{gun[1].assists}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{gun[1].headshotKills}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{gun[1].amountSpent}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{gun[1].equipmentValue}</StyledTableCell>\n                      <StyledTableCell align=\"center\">{gun[1].moneySaved}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{gun[1].clanName}</StyledTableCell>\n                    </StyledTableRow>\n                  ))) : <StyledTableCell></StyledTableCell>}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment >\n  );\n}\n\nconst ResultsTable = (props) => {\n  let rows = [];\n  if (props.data) {\n    for (let key in props.data) {\n      if (props.data.hasOwnProperty(key)) {\n        rows.push([key, props.data[key]]);\n      }\n    }\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell />\n            <StyledTableCell align=\"center\">Round number</StyledTableCell>\n            <StyledTableCell align=\"center\">Score</StyledTableCell>\n            <StyledTableCell align=\"center\">Reason</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {rows ? (rows.map(row => (\n            <Row key={row[0].toString()} row={row[1]} rou={row[1]} roundNumber={row[0].toString()} />\n          ))) : <StyledTableCell></StyledTableCell>}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction mapStateToProps(state) {\n  if (state) {\n    return {\n      data: state.results.rounds\n    }\n  }\n  return {};\n}\n\nexport default connect(mapStateToProps)(ResultsTable);","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\RoundResultChart.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\scoreboard\\Table.js",["386"],"import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { connect } from 'react-redux';\n\n//funkcja filter dla obiektow\nObject.filter = (obj, predicate) =>\n  Object.keys(obj)\n    .filter(key => predicate(obj[key]))\n    .reduce((res, key) => (res[key] = obj[key], res), {});\n\n//funkcja sortująca dla obiektow\nfunction sortProperties(obj, sortedBy, isNumericSort, reverse) {\n  sortedBy = sortedBy || 1; // by default first key\n  isNumericSort = isNumericSort || false; // by default text sort\n  reverse = reverse || false; // by default no reverse\n\n  var reversed = (reverse) ? -1 : 1;\n\n  var sortable = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      sortable.push([key, obj[key]]);\n    }\n  }\n  if (isNumericSort)\n    sortable.sort(function (a, b) {\n      return reversed * (a[1][sortedBy] - b[1][sortedBy]);\n    });\n  else\n    sortable.sort(function (a, b) {\n      var x = a[1][sortedBy].toLowerCase(),\n        y = b[1][sortedBy].toLowerCase();\n      return x < y ? reversed * -1 : x > y ? reversed : 0;\n    });\n  return sortable;\n}\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.info.dark,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 350,\n  },\n});\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\nconst ResultsTable = (props) => {\n  let rows;\n  if (props.data) {\n    rows = Object.filter(props.data, row => row.teamGame === props.team);\n    rows = sortProperties(rows, 'kills', true, true);\n    //console.log(rows);\n  }\n\n  const classes = useStyles();\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell align=\"left\" style={{ width: '80px' }}>Player name</StyledTableCell>\n            <StyledTableCell align=\"center\">Kills</StyledTableCell>\n            <StyledTableCell align=\"center\">Deaths</StyledTableCell>\n            <StyledTableCell align=\"center\">Assists</StyledTableCell>\n            <StyledTableCell align=\"center\">Balance</StyledTableCell>\n            <StyledTableCell align=\"center\">K/D</StyledTableCell>\n            <StyledTableCell align=\"center\">Headshot %</StyledTableCell>\n            <StyledTableCell align=\"center\">Average damages</StyledTableCell>\n            <StyledTableCell align=\"center\">Average kills</StyledTableCell>\n            <StyledTableCell align=\"center\">Accuracy %</StyledTableCell>\n            <StyledTableCell align=\"right\" style={{ width: '80px' }}>Clan Name</StyledTableCell>\n\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {rows ? (rows.map(row => (\n            <StyledTableRow key={row[1].name} >\n              <StyledTableCell align=\"left\" style={{ width: '80px' }}>{row[1].name}</StyledTableCell>\n              <StyledTableCell align=\"center\">{row[1].kills}</StyledTableCell>\n              <StyledTableCell align=\"center\">{row[1].deaths}</StyledTableCell>\n              <StyledTableCell align=\"center\">{row[1].assists}</StyledTableCell>\n              <StyledTableCell align=\"center\">{row[1].kills - row[1].deaths}</StyledTableCell>\n              <StyledTableCell align=\"center\">{Math.round((row[1].kills / row[1].deaths) * 10) / 10}</StyledTableCell>\n              <StyledTableCell align=\"center\">{Math.round((row[1].averageHeadshot) * 100)}%</StyledTableCell>\n              <StyledTableCell align=\"center\">{Math.round((row[1].averageDamages) * 1) / 1}</StyledTableCell>\n              <StyledTableCell align=\"center\">{Math.round((row[1].averageKills) * 10) / 10}</StyledTableCell>\n              <StyledTableCell align=\"center\">{Math.round((row[1].overallAccuracy) * 1) / 1}%</StyledTableCell>\n\n              <StyledTableCell align=\"right\" style={{ width: '80px' }}>{row[1].clanName}</StyledTableCell>\n            </StyledTableRow>\n          ))) : (<StyledTableCell></StyledTableCell>)}\n        </TableBody>\n      </Table >\n    </TableContainer >\n  );\n}\n\nfunction mapStateToProps(state) {\n  if (state) {\n    return {\n      data: state.results.players\n    }\n  }\n  return {};\n}\n\nexport default connect(mapStateToProps)(ResultsTable);","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\economy\\Economy.js",["387"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import RoundPanel from './RoundPanel';\r\nimport EconomyResult from './EconomyResult';\r\nimport EconomyPie from './EconomyPie';\r\nimport EquipmentComp from './EquipmentComp';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Paper from '@material-ui/core/Paper';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(2),\r\n    }\r\n}))\r\n\r\nconst Economy = (props) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState('panel1');\r\n\r\n    const handleChange = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <Container fixed className={classes.root}>\r\n            <ExpansionPanel square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n                <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\" expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography className={classes.heading}>Teams economy summary</Typography>\r\n                    <Typography className={classes.secondaryHeading}>Find out your expenditure breakdown in this match</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Container>\r\n                        <Paper className={classes.paper}>\r\n                            <EconomyResult data={props.data}></EconomyResult>\r\n                        </Paper>\r\n                    </Container>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                <ExpansionPanelSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\" expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography className={classes.heading}>Equipment value comparison</Typography>\r\n                    <Typography className={classes.secondaryHeading}>Find out your expenditure breakdown in this match</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Container>\r\n                        <Paper className={classes.paper}>\r\n                            <EquipmentComp data={props.data}></EquipmentComp>\r\n                        </Paper>\r\n                        {/* <Paper className={classes.paper}>\r\n                            <EconomyPie data={props.data}></EconomyPie>\r\n                        </Paper> */}\r\n                    </Container>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            {/* <ExpansionPanel square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                <ExpansionPanelSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\" expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography className={classes.heading}>Counter-Terrorists Economy</Typography>\r\n                    <Typography className={classes.secondaryHeading}>Find out your expenditure breakdown and round types in this match</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Container>\r\n                        <Paper className={classes.paper}>\r\n                            <EconomyResult data={props.data}></EconomyResult>\r\n                        </Paper>\r\n                    </Container>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel> */}\r\n        </Container >)\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    if (state.results.economy) {\r\n        return {\r\n            data: state.results.economy,\r\n        }\r\n    }\r\n    return {};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Economy);\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import { connect } from 'react-redux';\r\n// import Container from '@material-ui/core/Container';\r\n// import Typography from \"@material-ui/core/Typography\";\r\n// import EconomyResultCT from './EconomyResultCT';\r\n// import EconomyResultT from './EconomyResultT';\r\n// import ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\n// import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\n// import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         flexDirection: 'column',\r\n//         justifyContent: 'center',\r\n//         textAlign: 'center'\r\n//     },\r\n//     heading: {\r\n//         fontSize: theme.typography.pxToRem(15),\r\n//         flexBasis: '33.33%',\r\n//         flexShrink: 0,\r\n//     },\r\n//     secondaryHeading: {\r\n//         fontSize: theme.typography.pxToRem(15),\r\n//         color: theme.palette.text.secondary,\r\n//     },\r\n// }))\r\n\r\n// const Economy = (props) => {\r\n//     const classes = useStyles();\r\n//     const [expanded, setExpanded] = React.useState('panel1');\r\n\r\n//     const handleChange = (panel) => (event, newExpanded) => {\r\n//         setExpanded(newExpanded ? panel : false);\r\n//     };\r\n\r\n//     return (\r\n//         <Container fixed className={classes.root}>\r\n//             <ExpansionPanel square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n//                 <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\" expandIcon={<ExpandMoreIcon />}>\r\n//                     <Typography className={classes.heading}>Economy team CT</Typography>\r\n//                     <Typography className={classes.secondaryHeading}>Find out your team's round wins and losses this game</Typography>\r\n//                 </ExpansionPanelSummary>\r\n//                 <ExpansionPanelDetails>\r\n//                     <EconomyResultCT data={props}></EconomyResultCT>\r\n//                 </ExpansionPanelDetails>\r\n//             </ExpansionPanel>\r\n\r\n//             <ExpansionPanel square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n//                 <ExpansionPanelSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\" expandIcon={<ExpandMoreIcon />}>\r\n//                     <Typography className={classes.heading}>Economy team T</Typography>\r\n//                     <Typography className={classes.secondaryHeading}>Check the match by following the statistics round by round</Typography>\r\n//                 </ExpansionPanelSummary>\r\n//                 <ExpansionPanelDetails>\r\n//                     <EconomyResultT data={props}></EconomyResultT>\r\n//                 </ExpansionPanelDetails>\r\n//             </ExpansionPanel>\r\n//         </Container >)\r\n// }\r\n\r\n// function mapStateToProps(state) {\r\n//     if (state.results.economy) {\r\n//         return {\r\n//             data: state.results.economy.ct\r\n//         }\r\n//     }\r\n//     return {};\r\n// }\r\n\r\n// export default connect(mapStateToProps)(Economy);","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\economy\\EconomyPie.js",["388","389","390","391","392","393"],"import React from 'react';\r\nimport { PieChart, Pie, Sector } from 'recharts';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst renderActiveShape = (props) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const {\r\n        cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n        fill, payload, percent, value,\r\n    } = props;\r\n    const sin = Math.sin(-RADIAN * midAngle);\r\n    const cos = Math.cos(-RADIAN * midAngle);\r\n    const sx = cx + (outerRadius + 10) * cos;\r\n    const sy = cy + (outerRadius + 10) * sin;\r\n    const mx = cx + (outerRadius + 30) * cos;\r\n    const my = cy + (outerRadius + 30) * sin;\r\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n    const ey = my;\r\n    const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n    return (\r\n        <g>\r\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                innerRadius={innerRadius}\r\n                outerRadius={outerRadius}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                fill={fill}\r\n            />\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                innerRadius={outerRadius + 6}\r\n                outerRadius={outerRadius + 10}\r\n                fill={fill}\r\n            />\r\n            <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\r\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{value}</text>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\r\n                {`${(percent * 100).toFixed(2)}%`}\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\n\r\nexport default class RoundTypeChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let ecoroundsCT = [];\r\n        let forcebuyroundsCT = [];\r\n        let fullbuyroundsCT = [];\r\n        let ecoroundsT = [];\r\n        let forcebuyroundsT = [];\r\n        let fullbuyroundsT = [];\r\n\r\n        Object.entries(props.data).forEach(round => {\r\n            let roundNumber = round[0];\r\n            let rdata = round[1];\r\n            if (rdata.equipmentValueCT <= 1000) ecoroundsCT.push(roundNumber);\r\n            else if (rdata.equipmentValueCT <= 20000) forcebuyroundsCT.push(roundNumber);\r\n            else fullbuyroundsCT.push(roundNumber);\r\n\r\n            if (rdata.equipmentValueT <= 1000) ecoroundsT.push(roundNumber);\r\n            else if (rdata.equipmentValueT <= 20000) forcebuyroundsT.push(roundNumber);\r\n            else fullbuyroundsT.push(roundNumber);\r\n        });\r\n\r\n        const data = [\r\n            { name: 'Full Buy', value: fullbuyroundsCT.length },\r\n            { name: 'Force Buy', value: forcebuyroundsCT.length },\r\n            { name: 'Eco', value: ecoroundsCT.length },\r\n        ];\r\n        const data2 = [\r\n            { name: 'Full Buy', value: fullbuyroundsCT.length },\r\n            { name: 'Force Buy', value: forcebuyroundsCT.length },\r\n            { name: 'Eco', value: ecoroundsCT.length },\r\n        ];\r\n\r\n        this.state = {\r\n            data: {\r\n                rounds: [{\r\n                    type: 'Force Buy',\r\n                    rounds: forcebuyroundsCT\r\n                }, {\r\n                    type: 'Full Buy',\r\n                    rounds: fullbuyroundsCT\r\n                }, {\r\n                    type: 'Eco',\r\n                    rounds: ecoroundsCT\r\n                }],\r\n                piechartdata: data\r\n            },\r\n            activeIndex: 0,\r\n        };\r\n\r\n        this.state2 = {\r\n            data: {\r\n                rounds: [{\r\n                    type: 'Force Buy',\r\n                    rounds: forcebuyroundsCT\r\n                }, {\r\n                    type: 'Full Buy',\r\n                    rounds: fullbuyroundsCT\r\n                }, {\r\n                    type: 'Eco',\r\n                    rounds: ecoroundsCT\r\n                }],\r\n                piechartdata: data2\r\n            },\r\n            activeIndex: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let piechart = [...document.querySelectorAll('.recharts-surface')].find((e) => e.viewBox.baseVal.height === 350 && e.viewBox.baseVal.width === 500);\r\n        piechart.viewBox.baseVal.x = -40;\r\n        piechart.viewBox.baseVal.y = 90;\r\n    }\r\n\r\n    onPieEnter = (data, index) => {\r\n        this.setState({\r\n            activeIndex: index,\r\n        });\r\n    };\r\n    onPieEnter2 = (data, index) => {\r\n        this.setState({\r\n            activeIndex: index,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Container style={{ display: 'flex', justifyContent: 'center', flexDirection: 'column', paddingTop: \"40px\" }}>\r\n                    <Typography align=\"center\" variant=\"subtitle2\">Round Type Distribution Pie Chart</Typography>\r\n                    <Container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <PieChart width={500} height={350}>\r\n                            <Pie\r\n                                activeIndex={this.state.activeIndex}\r\n                                activeShape={renderActiveShape}\r\n                                data={this.state.data.piechartdata}\r\n                                cx={200}\r\n                                cy={200}\r\n                                innerRadius={60}\r\n                                outerRadius={80}\r\n                                fill=\"#8884d8\"\r\n                                dataKey=\"value\"\r\n                                onMouseEnter={this.onPieEnter}\r\n                            />\r\n                        </PieChart>\r\n                    </Container>\r\n                    <Typography align=\"center\" variant=\"subtitle2\">Round Type Distribution Pie Chart</Typography>\r\n                    <Container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <PieChart width={500} height={350}>\r\n                            <Pie\r\n                                activeIndex={this.state2.activeIndex}\r\n                                activeShape={renderActiveShape}\r\n                                data={this.state2.data.piechartdata}\r\n                                cx={200}\r\n                                cy={200}\r\n                                innerRadius={60}\r\n                                outerRadius={80}\r\n                                fill=\"#8884d8\"\r\n                                dataKey=\"value\"\r\n                                onMouseEnter={this.onPieEnter2}\r\n                            />\r\n                        </PieChart>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\economy\\EconomyResult.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\economy\\EquipmentComp.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\RoundRating.js",["394","395","396"],"import React from 'react';\r\nimport {\r\n    ScatterChart, Scatter, Legend, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine\r\n} from 'recharts';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nconst RoundResultChart = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const series = [];\r\n    let data = [];\r\n    Object.entries(props.data).forEach(player => {\r\n        let playerName = player[0]; //player name\r\n        let rdata = player[1]; // rounds\r\n        data = [];\r\n        Object.entries(rdata).forEach(rounds => {\r\n            let roundNumber = rounds[0];\r\n            let totalDamage = rounds[1].rating;\r\n            data.push({\r\n                category: roundNumber.toString(),\r\n                value: totalDamage\r\n            })\r\n        })\r\n        series.push({\r\n            name: playerName.toString(),\r\n            data: data\r\n        });\r\n    });\r\n    console.log(series);\r\n    const colors = ['red', 'green', 'blue', 'black', 'purple', 'black'];\r\n    return (\r\n        <Container className={classes.container}>\r\n            <LineChart\r\n                width={800}\r\n                height={400}\r\n                data={data}\r\n                margin={{\r\n                    top: 5, right: 30, left: 20, bottom: 20,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"category\" type=\"category\" allowDuplicatedCategory={false} label={{ value: 'Round Number', angle: 0, position: 'bottom' }}></XAxis>\r\n                <YAxis dataKey=\"value\" label={{ value: 'Rating', angle: -90, position: 'insideLeft' }}></YAxis>\r\n                <Tooltip />\r\n                <Legend verticalAlign=\"top\" height={36} />\r\n                {series.map((s, index) => (\r\n                    <Line dataKey=\"value\" data={s.data} name={s.name} key={s.name} stroke={colors[index % colors.length]} />\r\n                ))}\r\n            </LineChart>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default RoundResultChart;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\components\\rounds\\RoundDamages.js",["397","398","399"],"import React from 'react';\r\nimport {\r\n    ScatterChart, Scatter, Legend, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine\r\n} from 'recharts';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nconst RoundResultChart = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const series = [];\r\n    let data = [];\r\n    Object.entries(props.data).forEach(player => {\r\n        let playerName = player[0]; //player name\r\n        let rdata = player[1]; // rounds\r\n        data = [];\r\n        Object.entries(rdata).forEach(rounds => {\r\n            let roundNumber = rounds[0];\r\n            let totalDamage = rounds[1].totalDamages;\r\n            data.push({\r\n                category: roundNumber.toString(),\r\n                value: totalDamage\r\n            })\r\n        })\r\n        series.push({\r\n            name: playerName.toString(),\r\n            data: data\r\n        });\r\n    });\r\n    console.log(series);\r\n    const colors = ['red', 'green', 'blue', 'black', 'purple', 'black'];\r\n    return (\r\n        <Container className={classes.container}>\r\n            <LineChart\r\n                width={800}\r\n                height={400}\r\n                data={data}\r\n                margin={{\r\n                    top: 5, right: 30, left: 20, bottom: 20,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"category\" type=\"category\" allowDuplicatedCategory={false} label={{ value: 'Round Number', angle: 0, position: 'bottom' }}></XAxis>\r\n                <YAxis dataKey=\"value\" label={{ value: 'Damage', angle: -90, position: 'insideLeft' }}></YAxis>\r\n                <Tooltip />\r\n                <Legend verticalAlign=\"top\" height={36} />\r\n                {series.map((s, index) => (\r\n                    <Line dataKey=\"value\" data={s.data} name={s.name} key={s.name} stroke={colors[index % colors.length]} />\r\n                ))}\r\n            </LineChart>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default RoundResultChart;","C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\store\\store.js",["400","401","402","403"],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\reducers\\authReducer.js",["404"],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\reducers\\uploadReducer.js",["405"],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\reducers\\errorReducer.js",["406"],"C:\\Users\\kaplan\\Desktop\\csgo-demo-analysis2\\client\\src\\redux\\actions\\types.js",[],{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","severity":1,"message":"412","line":1,"column":23,"nodeType":"413","messageId":"414","endLine":1,"endColumn":38},{"ruleId":"411","severity":1,"message":"415","line":1,"column":40,"nodeType":"413","messageId":"414","endLine":1,"endColumn":47},{"ruleId":"411","severity":1,"message":"416","line":4,"column":7,"nodeType":"413","messageId":"414","endLine":4,"endColumn":11},{"ruleId":"411","severity":1,"message":"417","line":7,"column":7,"nodeType":"413","messageId":"414","endLine":7,"endColumn":17},{"ruleId":"411","severity":1,"message":"418","line":2,"column":25,"nodeType":"413","messageId":"414","endLine":2,"endColumn":33},{"ruleId":"419","severity":1,"message":"420","line":3,"column":1,"nodeType":"421","endLine":10,"endColumn":2},{"ruleId":"419","severity":1,"message":"420","line":9,"column":1,"nodeType":"421","endLine":20,"endColumn":2},{"ruleId":"419","severity":1,"message":"420","line":5,"column":1,"nodeType":"421","endLine":15,"endColumn":2},{"ruleId":"422","severity":1,"message":"423","line":26,"column":3,"nodeType":"424","messageId":"425","endLine":28,"endColumn":4},{"ruleId":"411","severity":1,"message":"426","line":15,"column":8,"nodeType":"413","messageId":"414","endLine":15,"endColumn":13},{"ruleId":"411","severity":1,"message":"427","line":16,"column":8,"nodeType":"413","messageId":"414","endLine":16,"endColumn":18},{"ruleId":"411","severity":1,"message":"428","line":17,"column":8,"nodeType":"413","messageId":"414","endLine":17,"endColumn":19},{"ruleId":"429","severity":1,"message":"430","line":28,"column":19,"nodeType":"431","messageId":"432","endLine":28,"endColumn":21},{"ruleId":"411","severity":1,"message":"433","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":30},{"ruleId":"411","severity":1,"message":"434","line":11,"column":10,"nodeType":"413","messageId":"414","endLine":11,"endColumn":20},{"ruleId":"429","severity":1,"message":"430","line":69,"column":29,"nodeType":"431","messageId":"432","endLine":69,"endColumn":31},{"ruleId":"429","severity":1,"message":"430","line":101,"column":109,"nodeType":"431","messageId":"432","endLine":101,"endColumn":111},{"ruleId":"429","severity":1,"message":"430","line":101,"column":143,"nodeType":"431","messageId":"432","endLine":101,"endColumn":145},{"ruleId":"435","severity":1,"message":"436","line":47,"column":11,"nodeType":"437","endLine":47,"endColumn":32},{"ruleId":"411","severity":1,"message":"438","line":3,"column":66,"nodeType":"413","messageId":"414","endLine":3,"endColumn":71},{"ruleId":"411","severity":1,"message":"439","line":3,"column":73,"nodeType":"413","messageId":"414","endLine":3,"endColumn":86},{"ruleId":"411","severity":1,"message":"440","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":28,"column":40,"nodeType":"431","messageId":"432","endLine":28,"endColumn":42},{"ruleId":"411","severity":1,"message":"440","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":13},{"ruleId":"411","severity":1,"message":"441","line":3,"column":58,"nodeType":"413","messageId":"414","endLine":3,"endColumn":64},{"ruleId":"411","severity":1,"message":"438","line":3,"column":66,"nodeType":"413","messageId":"414","endLine":3,"endColumn":71},{"ruleId":"411","severity":1,"message":"440","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":13},{"ruleId":"411","severity":1,"message":"442","line":7,"column":8,"nodeType":"413","messageId":"414","endLine":7,"endColumn":18},{"ruleId":"411","severity":1,"message":"443","line":11,"column":10,"nodeType":"413","messageId":"414","endLine":11,"endColumn":18},{"ruleId":"435","severity":1,"message":"436","line":36,"column":11,"nodeType":"437","endLine":36,"endColumn":32},{"ruleId":"407","replacedBy":"444"},{"ruleId":"409","replacedBy":"445"},{"ruleId":"411","severity":1,"message":"433","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":30},{"ruleId":"411","severity":1,"message":"434","line":11,"column":10,"nodeType":"413","messageId":"414","endLine":11,"endColumn":20},{"ruleId":"429","severity":1,"message":"430","line":69,"column":29,"nodeType":"431","messageId":"432","endLine":69,"endColumn":31},{"ruleId":"429","severity":1,"message":"430","line":101,"column":109,"nodeType":"431","messageId":"432","endLine":101,"endColumn":111},{"ruleId":"429","severity":1,"message":"430","line":101,"column":143,"nodeType":"431","messageId":"432","endLine":101,"endColumn":145},{"ruleId":"407","replacedBy":"446"},{"ruleId":"409","replacedBy":"447"},{"ruleId":"411","severity":1,"message":"448","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":17},{"ruleId":"411","severity":1,"message":"442","line":13,"column":8,"nodeType":"413","messageId":"414","endLine":13,"endColumn":18},{"ruleId":"449","severity":1,"message":"450","line":22,"column":51,"nodeType":"451","messageId":"452","endLine":22,"endColumn":52},{"ruleId":"407","replacedBy":"453"},{"ruleId":"409","replacedBy":"454"},{"ruleId":"449","severity":1,"message":"450","line":20,"column":47,"nodeType":"451","messageId":"452","endLine":20,"endColumn":48},{"ruleId":"449","severity":1,"message":"450","line":15,"column":47,"nodeType":"451","messageId":"452","endLine":15,"endColumn":48},{"ruleId":"411","severity":1,"message":"455","line":8,"column":8,"nodeType":"413","messageId":"414","endLine":8,"endColumn":18},{"ruleId":"411","severity":1,"message":"456","line":5,"column":8,"nodeType":"413","messageId":"414","endLine":5,"endColumn":13},{"ruleId":"411","severity":1,"message":"457","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":17},{"ruleId":"411","severity":1,"message":"458","line":7,"column":8,"nodeType":"413","messageId":"414","endLine":7,"endColumn":17},{"ruleId":"411","severity":1,"message":"459","line":8,"column":8,"nodeType":"413","messageId":"414","endLine":8,"endColumn":22},{"ruleId":"411","severity":1,"message":"460","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":17},{"ruleId":"411","severity":1,"message":"461","line":10,"column":8,"nodeType":"413","messageId":"414","endLine":10,"endColumn":16},{"ruleId":"411","severity":1,"message":"462","line":3,"column":5,"nodeType":"413","messageId":"414","endLine":3,"endColumn":17},{"ruleId":"411","severity":1,"message":"463","line":3,"column":19,"nodeType":"413","messageId":"414","endLine":3,"endColumn":26},{"ruleId":"411","severity":1,"message":"439","line":3,"column":91,"nodeType":"413","messageId":"414","endLine":3,"endColumn":104},{"ruleId":"411","severity":1,"message":"462","line":3,"column":5,"nodeType":"413","messageId":"414","endLine":3,"endColumn":17},{"ruleId":"411","severity":1,"message":"463","line":3,"column":19,"nodeType":"413","messageId":"414","endLine":3,"endColumn":26},{"ruleId":"411","severity":1,"message":"439","line":3,"column":91,"nodeType":"413","messageId":"414","endLine":3,"endColumn":104},{"ruleId":"411","severity":1,"message":"412","line":1,"column":23,"nodeType":"413","messageId":"414","endLine":1,"endColumn":38},{"ruleId":"411","severity":1,"message":"415","line":1,"column":40,"nodeType":"413","messageId":"414","endLine":1,"endColumn":47},{"ruleId":"411","severity":1,"message":"416","line":4,"column":7,"nodeType":"413","messageId":"414","endLine":4,"endColumn":11},{"ruleId":"411","severity":1,"message":"417","line":7,"column":7,"nodeType":"413","messageId":"414","endLine":7,"endColumn":17},{"ruleId":"419","severity":1,"message":"420","line":9,"column":1,"nodeType":"421","endLine":20,"endColumn":2},{"ruleId":"419","severity":1,"message":"420","line":5,"column":1,"nodeType":"421","endLine":15,"endColumn":2},{"ruleId":"419","severity":1,"message":"420","line":3,"column":1,"nodeType":"421","endLine":10,"endColumn":2},"no-native-reassign",["464"],"no-negated-in-lhs",["465"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","'data' is assigned a value but never used.","'middleware' is assigned a value but never used.","'Redirect' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Input' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PureComponent' is defined but never used.","'makeStyles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Label' is defined but never used.","'ReferenceLine' is defined but never used.","'Paper' is defined but never used.","'Legend' is defined but never used.","'Typography' is defined but never used.","'TabPanel' is defined but never used.",["464"],["465"],["464"],["465"],"'PropTypes' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["464"],["465"],"'EconomyPie' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'ScatterChart' is defined but never used.","'Scatter' is defined but never used.","no-global-assign","no-unsafe-negation"]